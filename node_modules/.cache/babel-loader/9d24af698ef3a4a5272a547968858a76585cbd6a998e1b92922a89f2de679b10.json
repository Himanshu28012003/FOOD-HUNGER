{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: 'http://localhost:5000/api'\n});\nAPI.interceptors.request.use(req => {\n  const token = localStorage.getItem('token');\n  if (token) req.headers.Authorization = `Bearer ${token}`;\n  return req;\n});\n\n// Restaurant API functions\nexport const restaurantAPI = {\n  // Get all restaurants with optional filters\n  getAll: (filters = {}) => API.get('/restaurants', {\n    params: filters\n  }),\n  // Get random restaurants\n  getRandom: (params = {}) => API.get('/restaurants/random', {\n    params\n  }),\n  // Get single restaurant by ID\n  getById: id => API.get(`/restaurants/${id}`),\n  // Add review to restaurant\n  addReview: (restaurantId, reviewData) => API.post(`/restaurants/${restaurantId}/reviews`, reviewData)\n};\n\n// Auth API functions\nexport const authAPI = {\n  login: credentials => API.post('/auth/login', credentials),\n  register: userData => API.post('/auth/register', userData),\n  getProfile: () => API.get('/auth/profile')\n};\n\n// User API functions\nexport const userAPI = {\n  getPreferences: () => API.get('/users/preferences'),\n  updatePreferences: preferences => API.put('/users/preferences', preferences)\n};\n\n// Menu API functions\nexport const menuAPI = {\n  getByRestaurant: restaurantId => API.get(`/menus/${restaurantId}`)\n};\n\n// Order API functions\nexport const orderAPI = {\n  create: orderData => API.post('/orders', orderData),\n  getById: id => API.get(`/orders/${id}`),\n  getUserOrders: () => API.get('/orders')\n};\n\n// Reservation API functions\nexport const reservationAPI = {\n  create: reservationData => API.post('/reservations', reservationData),\n  getUserReservations: () => API.get('/reservations'),\n  cancel: id => API.delete(`/reservations/${id}`)\n};\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","req","token","localStorage","getItem","headers","Authorization","restaurantAPI","getAll","filters","get","params","getRandom","getById","id","addReview","restaurantId","reviewData","post","authAPI","login","credentials","register","userData","getProfile","userAPI","getPreferences","updatePreferences","preferences","put","menuAPI","getByRestaurant","orderAPI","orderData","getUserOrders","reservationAPI","reservationData","getUserReservations","cancel","delete"],"sources":["C:/Users/Himan/OneDrive/Desktop/restaurant bot/frontend/src/api/index.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API = axios.create({\r\n  baseURL: 'http://localhost:5000/api',\r\n});\r\n\r\nAPI.interceptors.request.use((req) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) req.headers.Authorization = `Bearer ${token}`;\r\n  return req;\r\n});\r\n\r\n// Restaurant API functions\r\nexport const restaurantAPI = {\r\n  // Get all restaurants with optional filters\r\n  getAll: (filters = {}) => API.get('/restaurants', { params: filters }),\r\n  \r\n  // Get random restaurants\r\n  getRandom: (params = {}) => API.get('/restaurants/random', { params }),\r\n  \r\n  // Get single restaurant by ID\r\n  getById: (id) => API.get(`/restaurants/${id}`),\r\n  \r\n  // Add review to restaurant\r\n  addReview: (restaurantId, reviewData) => API.post(`/restaurants/${restaurantId}/reviews`, reviewData),\r\n};\r\n\r\n// Auth API functions\r\nexport const authAPI = {\r\n  login: (credentials) => API.post('/auth/login', credentials),\r\n  register: (userData) => API.post('/auth/register', userData),\r\n  getProfile: () => API.get('/auth/profile'),\r\n};\r\n\r\n// User API functions\r\nexport const userAPI = {\r\n  getPreferences: () => API.get('/users/preferences'),\r\n  updatePreferences: (preferences) => API.put('/users/preferences', preferences),\r\n};\r\n\r\n// Menu API functions\r\nexport const menuAPI = {\r\n  getByRestaurant: (restaurantId) => API.get(`/menus/${restaurantId}`),\r\n};\r\n\r\n// Order API functions\r\nexport const orderAPI = {\r\n  create: (orderData) => API.post('/orders', orderData),\r\n  getById: (id) => API.get(`/orders/${id}`),\r\n  getUserOrders: () => API.get('/orders'),\r\n};\r\n\r\n// Reservation API functions\r\nexport const reservationAPI = {\r\n  create: (reservationData) => API.post('/reservations', reservationData),\r\n  getUserReservations: () => API.get('/reservations'),\r\n  cancel: (id) => API.delete(`/reservations/${id}`),\r\n};\r\n\r\nexport default API; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;AAEFF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,GAAG,IAAK;EACpC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAED,GAAG,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EACxD,OAAOD,GAAG;AACZ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMM,aAAa,GAAG;EAC3B;EACAC,MAAM,EAAEA,CAACC,OAAO,GAAG,CAAC,CAAC,KAAKd,GAAG,CAACe,GAAG,CAAC,cAAc,EAAE;IAAEC,MAAM,EAAEF;EAAQ,CAAC,CAAC;EAEtE;EACAG,SAAS,EAAEA,CAACD,MAAM,GAAG,CAAC,CAAC,KAAKhB,GAAG,CAACe,GAAG,CAAC,qBAAqB,EAAE;IAAEC;EAAO,CAAC,CAAC;EAEtE;EACAE,OAAO,EAAGC,EAAE,IAAKnB,GAAG,CAACe,GAAG,CAAC,gBAAgBI,EAAE,EAAE,CAAC;EAE9C;EACAC,SAAS,EAAEA,CAACC,YAAY,EAAEC,UAAU,KAAKtB,GAAG,CAACuB,IAAI,CAAC,gBAAgBF,YAAY,UAAU,EAAEC,UAAU;AACtG,CAAC;;AAED;AACA,OAAO,MAAME,OAAO,GAAG;EACrBC,KAAK,EAAGC,WAAW,IAAK1B,GAAG,CAACuB,IAAI,CAAC,aAAa,EAAEG,WAAW,CAAC;EAC5DC,QAAQ,EAAGC,QAAQ,IAAK5B,GAAG,CAACuB,IAAI,CAAC,gBAAgB,EAAEK,QAAQ,CAAC;EAC5DC,UAAU,EAAEA,CAAA,KAAM7B,GAAG,CAACe,GAAG,CAAC,eAAe;AAC3C,CAAC;;AAED;AACA,OAAO,MAAMe,OAAO,GAAG;EACrBC,cAAc,EAAEA,CAAA,KAAM/B,GAAG,CAACe,GAAG,CAAC,oBAAoB,CAAC;EACnDiB,iBAAiB,EAAGC,WAAW,IAAKjC,GAAG,CAACkC,GAAG,CAAC,oBAAoB,EAAED,WAAW;AAC/E,CAAC;;AAED;AACA,OAAO,MAAME,OAAO,GAAG;EACrBC,eAAe,EAAGf,YAAY,IAAKrB,GAAG,CAACe,GAAG,CAAC,UAAUM,YAAY,EAAE;AACrE,CAAC;;AAED;AACA,OAAO,MAAMgB,QAAQ,GAAG;EACtBpC,MAAM,EAAGqC,SAAS,IAAKtC,GAAG,CAACuB,IAAI,CAAC,SAAS,EAAEe,SAAS,CAAC;EACrDpB,OAAO,EAAGC,EAAE,IAAKnB,GAAG,CAACe,GAAG,CAAC,WAAWI,EAAE,EAAE,CAAC;EACzCoB,aAAa,EAAEA,CAAA,KAAMvC,GAAG,CAACe,GAAG,CAAC,SAAS;AACxC,CAAC;;AAED;AACA,OAAO,MAAMyB,cAAc,GAAG;EAC5BvC,MAAM,EAAGwC,eAAe,IAAKzC,GAAG,CAACuB,IAAI,CAAC,eAAe,EAAEkB,eAAe,CAAC;EACvEC,mBAAmB,EAAEA,CAAA,KAAM1C,GAAG,CAACe,GAAG,CAAC,eAAe,CAAC;EACnD4B,MAAM,EAAGxB,EAAE,IAAKnB,GAAG,CAAC4C,MAAM,CAAC,iBAAiBzB,EAAE,EAAE;AAClD,CAAC;AAED,eAAenB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
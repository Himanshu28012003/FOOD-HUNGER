{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance\nconst API = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add auth token to requests\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle auth errors\nAPI.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: credentials => API.post('/auth/login', credentials),\n  register: userData => API.post('/auth/register', userData),\n  getProfile: () => API.get('/auth/profile')\n};\n\n// Restaurant API\nexport const restaurantAPI = {\n  getAll: () => API.get('/restaurants'),\n  getById: id => API.get(`/restaurants/${id}`),\n  getRandom: params => API.get('/restaurants/random', {\n    params\n  }),\n  search: params => API.get('/restaurants/search', {\n    params\n  })\n};\n\n// Menu API\nexport const menuAPI = {\n  getByRestaurant: restaurantId => API.get(`/menus/restaurant/${restaurantId}`),\n  getById: id => API.get(`/menus/${id}`)\n};\n\n// Order API\nexport const orderAPI = {\n  create: orderData => API.post('/orders', orderData),\n  getUserOrders: () => API.get('/orders/user'),\n  getById: id => API.get(`/orders/${id}`),\n  updateStatus: (id, status) => API.put(`/orders/${id}/status`, {\n    status\n  }),\n  cancel: id => API.post(`/orders/${id}/cancel`)\n};\n\n// Reservation API\nexport const reservationAPI = {\n  create: reservationData => API.post('/reservations', reservationData),\n  getUserReservations: () => API.get('/reservations/me'),\n  update: (id, reservationData) => API.put(`/reservations/${id}`, reservationData),\n  cancel: id => API.delete(`/reservations/${id}`)\n};\n\n// User API\nexport const userAPI = {\n  getPreferences: () => API.get('/users/preferences'),\n  updatePreferences: preferences => API.put('/users/preferences', preferences)\n};\n\n// Payment API\nexport const paymentAPI = {\n  createPaymentIntent: orderId => API.post('/payments/create-payment-intent', {\n    orderId\n  }),\n  confirmPayment: (orderId, paymentIntentId) => API.post('/payments/confirm-payment', {\n    orderId,\n    paymentIntentId\n  }),\n  getPaymentStatus: orderId => API.get(`/payments/status/${orderId}`),\n  refundPayment: orderId => API.post(`/payments/refund/${orderId}`)\n};\nexport default API;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","API","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","authAPI","login","credentials","post","register","userData","getProfile","get","restaurantAPI","getAll","getById","id","getRandom","params","search","menuAPI","getByRestaurant","restaurantId","orderAPI","orderData","getUserOrders","updateStatus","put","cancel","reservationAPI","reservationData","getUserReservations","update","delete","userAPI","getPreferences","updatePreferences","preferences","paymentAPI","createPaymentIntent","orderId","confirmPayment","paymentIntentId","getPaymentStatus","refundPayment"],"sources":["C:/Users/Himan/OneDrive/Desktop/restaurant bot/frontend/src/api/index.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Create axios instance\r\nconst API = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add auth token to requests\r\nAPI.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Handle auth errors\r\nAPI.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  login: (credentials) => API.post('/auth/login', credentials),\r\n  register: (userData) => API.post('/auth/register', userData),\r\n  getProfile: () => API.get('/auth/profile'),\r\n};\r\n\r\n// Restaurant API\r\nexport const restaurantAPI = {\r\n  getAll: () => API.get('/restaurants'),\r\n  getById: (id) => API.get(`/restaurants/${id}`),\r\n  getRandom: (params) => API.get('/restaurants/random', { params }),\r\n  search: (params) => API.get('/restaurants/search', { params }),\r\n};\r\n\r\n// Menu API\r\nexport const menuAPI = {\r\n  getByRestaurant: (restaurantId) => API.get(`/menus/restaurant/${restaurantId}`),\r\n  getById: (id) => API.get(`/menus/${id}`),\r\n};\r\n\r\n// Order API\r\nexport const orderAPI = {\r\n  create: (orderData) => API.post('/orders', orderData),\r\n  getUserOrders: () => API.get('/orders/user'),\r\n  getById: (id) => API.get(`/orders/${id}`),\r\n  updateStatus: (id, status) => API.put(`/orders/${id}/status`, { status }),\r\n  cancel: (id) => API.post(`/orders/${id}/cancel`),\r\n};\r\n\r\n// Reservation API\r\nexport const reservationAPI = {\r\n  create: (reservationData) => API.post('/reservations', reservationData),\r\n  getUserReservations: () => API.get('/reservations/me'),\r\n  update: (id, reservationData) => API.put(`/reservations/${id}`, reservationData),\r\n  cancel: (id) => API.delete(`/reservations/${id}`),\r\n};\r\n\r\n// User API\r\nexport const userAPI = {\r\n  getPreferences: () => API.get('/users/preferences'),\r\n  updatePreferences: (preferences) => API.put('/users/preferences', preferences),\r\n};\r\n\r\n// Payment API\r\nexport const paymentAPI = {\r\n  createPaymentIntent: (orderId) => API.post('/payments/create-payment-intent', { orderId }),\r\n  confirmPayment: (orderId, paymentIntentId) => API.post('/payments/confirm-payment', { orderId, paymentIntentId }),\r\n  getPaymentStatus: (orderId) => API.get(`/payments/status/${orderId}`),\r\n  refundPayment: (orderId) => API.post(`/payments/refund/${orderId}`),\r\n};\r\n\r\nexport default API; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}